---
import Layout from "../layouts/Layout.astro";

const experiences = [
  { year: "Depuis 2024", title: "Enseignant & Formateur", org: "OMNES Education", desc: "Cours licence √† master en cybers√©curit√© / data / IA / programmation", type: "exp" },
  { year: "Depuis 2023", title: "Freelance", org: "Ind√©pendant", desc: "Missions en architecture et d√©veloppement", type: "exp" },
  { year: "Depuis 2022", title: "Membre p√¥le tech", org: "Data4Good", desc: "B√©n√©volat, tech lead sur des projets data √† impact", type: "exp" },
  { year: "2018-2025", title: "Enseignant/Formateur sp√©cialis√©", org: "√âducation nationale", desc: "Inclusion & adaptations pour le handicap", type: "exp" },
  { year: "2014-2018", title: "Enseignant EPS", org: "√âducation nationale", desc: "Cours d‚Äô√©ducation physique et sportive", type: "exp" }
];

const diplomes = [
  { year: "2022", title: "Master Chef de Projet IA", org: "MinesTech Paris", type: "dip" },
  { year: "2018", title: "CAPPEI", org: "√âducation nationale", desc: "Sp√©cialisation handicap", type: "dip" },
  { year: "2014", title: "Master FIAPS & MEEF (EPS)", org: "Universit√© Lyon 1", type: "dip" }
];

// Fusion et tri correct
const timeline = [...diplomes, ...experiences].sort((a, b) => {
  const getYear = str => {
    // Extrait la premi√®re ann√©e trouv√©e dans la cha√Æne
    const match = str.match(/\d{4}/);
    return match ? parseInt(match[0]) : 0;
  };
  return getYear(a.year) - getYear(b.year);
});
---

<Layout title="Hadrien Poinseaux - D√©veloppeur & Architecte Data/IA">
  <section class="min-h-screen w-full flex justify-center items-start px-4 py-12 bg-gradient-to-tr from-green-700 via-blue-700 to-indigo-900">
    <div class="w-full max-w-5xl bg-white bg-opacity-90 p-6 sm:p-10 rounded-xl shadow-xl">

      <!-- HERO -->
      <header class="flex flex-col sm:flex-row items-center sm:items-start gap-6 mb-12">
        <img src="/photo-profil.png" alt="Photo de Hadrien Poinseaux" class="rounded-full w-28 h-28 object-cover shadow-lg border-4 border-green-500" />
        <div class="text-center sm:text-left">
          <h1 class="text-4xl sm:text-5xl font-extrabold text-gray-900">Hadrien Poinseaux</h1>
          <p class="mt-2 text-xl text-green-700 font-semibold"><span id="typing"></span></p>
          <p class="mt-4 text-lg sm:text-xl text-gray-800 leading-relaxed max-w-2xl">
            Passionn√© par la Data et l‚ÄôIA, je con√ßois des solutions robustes et scalables qui transforment les d√©fis en opportunit√©s strat√©giques.
          </p>
        </div>
      </header>

      <!-- VALEURS (sous forme de cartes) -->
      <section class="mb-16">
        <h2 class="text-3xl font-semibold text-gray-900 mb-8 text-center">Valeurs & Engagements</h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
          {[
            {icon:"üèóÔ∏è",title:"Architecte & Artisan",desc:"Des architectures sobres et scalables, sans sur-ing√©nierie."},
            {icon:"üß©",title:"Compr√©hension & Pr√©cision",desc:"Je privil√©gie des solutions cibl√©es et efficaces."},
            {icon:"üéß",title:"Veille & √âcoute",desc:"Toujours √† l‚Äôaff√ªt pour rester pertinent et innovant."},
            {icon:"ü§ù",title:"Collaboration",desc:"Relations solides bas√©es sur confiance et transparence."},
            {icon:"üå±",title:"Sobri√©t√© num√©rique",desc:"Des choix techniques responsables et durables."}
          ].map(v => (
            <div class="bg-white rounded-xl p-6 shadow hover:shadow-lg transform hover:-translate-y-1 transition">
              <div class="text-3xl text-green-600 mb-3">{v.icon}</div>
              <h3 class="font-semibold text-lg mb-2">{v.title}</h3>
              <p class="text-gray-700 text-base">{v.desc}</p>
            </div>
          ))}
        </div>
      </section>

      <!-- COMP√âTENCES TECHNIQUES -->
      <section class="mb-16">
        <h2 class="text-3xl font-semibold text-gray-900 mb-8 text-center">Comp√©tences techniques</h2>
        <div class="flex flex-wrap gap-3 justify-center">
          {["Python","Docker","Terraform","AWS","CI/CD","Prometheus","Grafana","PostgreSQL","NoSQL","Bash","Git","Scaleway"].map(skill => (
            <span class="px-4 py-2 bg-green-100 text-green-800 rounded-full shadow hover:scale-105 transition">
              {skill}
            </span>
          ))}
        </div>
      </section>

      <!-- SOFT SKILLS -->
      <section class="mb-16">
        <h2 class="text-3xl font-semibold text-gray-900 mb-8 text-center">Savoir-√™tre & m√©thodes</h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
          {[
            {icon:"üõ†Ô∏è",title:"Patience & Rigueur",desc:"Solutions fiables, maintenables et √©volutives."},
            {icon:"üéß",title:"Curiosit√©",desc:"Veille active et apprentissage continu."},
            {icon:"‚öôÔ∏è",title:"Agile",desc:"Flexibilit√© et am√©lioration continue."},
            {icon:"ü§ù",title:"Communication",desc:"Pont entre √©quipes techniques et m√©tiers."}
          ].map(s => (
            <div class="bg-white rounded-xl p-6 shadow hover:shadow-md transition">
              <div class="text-3xl text-green-600 mb-3">{s.icon}</div>
              <h3 class="font-semibold mb-2">{s.title}</h3>
              <p class="text-gray-700 text-base">{s.desc}</p>
            </div>
          ))}
        </div>
      </section>

      <!-- TIMELINE CENTRALE -->
      <section class="mb-16">
        <h2 class="text-3xl font-semibold text-gray-900 mb-12 text-center">Parcours</h2>
        <div class="relative max-w-4xl mx-auto">
          <div class="absolute left-1/2 transform -translate-x-1/2 h-full border-l-4 border-gray-300"></div>

          <div class="space-y-12">
            {timeline.map((item, i) => {
              const isDip = item.type === "dip";
              const justifyClass = i % 2 === 0 ? "justify-start" : "justify-end";
              const paddingClass = i % 2 === 0 ? "pr-8 text-right" : "pl-8";
              const circleColor = isDip ? "bg-blue-600" : "bg-green-600";
              const yearColor = isDip ? "text-blue-600" : "text-green-600";

              return (
                <div class={`relative flex ${justifyClass} items-center`} 
                    data-aos={i % 2 === 0 ? "fade-right" : "fade-left"} 
                    data-aos-delay={i * 150}>
                  <div class={`w-1/2 ${paddingClass} bg-white rounded-xl p-4 shadow transition-transform duration-300 hover:scale-105 hover:shadow-lg`}>
                    <h4 class={`text-lg font-bold ${yearColor}`}>{item.year}</h4>
                    <p class="text-gray-900 font-semibold">{item.title}</p>
                    <p class="text-gray-700">{item.org}</p>
                    {item.desc && <p class="text-gray-500 italic text-sm">{item.desc}</p>}
                  </div>
                  <div class={`absolute left-1/2 transform -translate-x-1/2 w-6 h-6 rounded-full border-4 border-white shadow ${circleColor}`} data-aos="zoom-in"></div>
                </div>
              )
            })}
          </div>
        </div>
      </section>

      <!-- CTA -->
      <div class="mt-12 flex flex-wrap justify-center gap-4">
        <a href="/projets" class="px-6 py-3 bg-gray-200 text-gray-800 rounded shadow hover:bg-gray-300 transition">üíº Mes exp√©riences</a>
        <a href="/infos" class="px-6 py-3 bg-green-600 text-white rounded shadow hover:bg-green-700 transition">üì¨ Contact</a>
      </div>

    </div>
  </section>

  <!-- Typing animation -->
  <script>
    const roles = ["Architecte Data/IA", "D√©veloppeur Full-Stack", "Passionn√© de Cloud & DevOps"];
    let i = 0, j = 0, current = "", deleting = false;
    const typingEl = document.getElementById("typing");

    function type() {
      if (i < roles.length) {
        if (!deleting && j <= roles[i].length) { current = roles[i].slice(0, j++); typingEl.textContent = current; }
        else if (deleting && j >= 0) { current = roles[i].slice(0, j--); typingEl.textContent = current; }
        if (j === roles[i].length + 5) deleting = true;
        if (j < 0) { deleting = false; i = (i + 1) % roles.length; }
        setTimeout(type, deleting ? 50 : 120);
      }
    }
    type();
        // Progress bar au scroll
    window.addEventListener("scroll", () => {
      const progressLine = document.getElementById("progress-line");
      if (!progressLine) return;
      const section = progressLine.parentElement;
      const rect = section.getBoundingClientRect();
      const windowHeight = window.innerHeight;
      const visible = Math.min(1, Math.max(0, (windowHeight - rect.top) / (rect.height + windowHeight)));
      progressLine.style.transform = `translateX(-50%) scaleY(${visible})`;
    });
  </script>
</Layout>